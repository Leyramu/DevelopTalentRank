<?xml version="1.0" encoding="UTF-8"?><!--
  ~ Copyright (c) 2024 Leyramu. All rights reserved.
  ~ This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
  ~ For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
  ~ The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
  ~ By using this project, users acknowledge and agree to abide by these terms and conditions.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!--      模块版本号      -->
    <modelVersion>4.0.0</modelVersion>

    <!--      父工程      -->
    <parent>
        <groupId>leyramu.framework</groupId>
        <artifactId>lersosa-cloud</artifactId>
        <relativePath>../pom.xml</relativePath>
        <version>1.0.0</version>
    </parent>

    <!--      项目描述      -->
    <description>Sentinel 流量限流控制器</description>

    <!--      工件 ID      -->
    <artifactId>lersosa-cloud-sentinel</artifactId>

    <!--      属性      -->
    <properties>
        <java.version>17</java.version>
        <log4j.version>2.23.1</log4j.version>
        <sentinel.version>1.8.8</sentinel.version>
        <curator.version>5.7.0</curator.version>
        <fastjson.version>2.0.52</fastjson.version>
        <resource.delimiter>@</resource.delimiter>
        <httpcore.version>4.4.16</httpcore.version>
        <httpclient.version>4.5.14</httpclient.version>
        <spring-boot.version>2.5.12</spring-boot.version>
        <httpcore-nio.version>4.4.16</httpcore-nio.version>
        <system-rules.version>1.19.0</system-rules.version>
        <commons-lang.version>2.6</commons-lang.version>
        <apollo-openapi.version>2.2.0</apollo-openapi.version>
        <httpasyncclient.version>4.1.5</httpasyncclient.version>
        <maven-checkstyle-plugin.version>3.4.0</maven-checkstyle-plugin.version>
    </properties>

    <!--      依赖      -->
    <dependencies>
        <!--    Sentinel Core    -->
        <dependency>
            <groupId>com.alibaba.csp</groupId>
            <artifactId>sentinel-core</artifactId>
            <version>${sentinel.version}</version>
        </dependency>

        <!--    Sentinel Web    -->
        <dependency>
            <groupId>com.alibaba.csp</groupId>
            <artifactId>sentinel-web-servlet</artifactId>
            <version>${sentinel.version}</version>
        </dependency>

        <!--    Sentinel Apache Http Client Adapter    -->
        <dependency>
            <groupId>com.alibaba.csp</groupId>
            <artifactId>sentinel-transport-simple-http</artifactId>
            <version>${sentinel.version}</version>
        </dependency>

        <!--    Sentinel Param Flow Control    -->
        <dependency>
            <groupId>com.alibaba.csp</groupId>
            <artifactId>sentinel-parameter-flow-control</artifactId>
            <version>${sentinel.version}</version>
        </dependency>

        <!--    Sentinel Gateway Adapter    -->
        <dependency>
            <groupId>com.alibaba.csp</groupId>
            <artifactId>sentinel-api-gateway-adapter-common</artifactId>
            <version>${sentinel.version}</version>
        </dependency>

        <!--    Sentinel DataSource    -->
        <dependency>
            <groupId>com.alibaba.csp</groupId>
            <artifactId>sentinel-datasource-nacos</artifactId>
            <version>${sentinel.version}</version>
            <scope>test</scope>
        </dependency>

        <!--    Fastjson    -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>

        <!--    Spring Boot Web    -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--    Spring Boot Logging    -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <!--    Spring Boot Test    -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot.version}</version>
            <scope>test</scope>
        </dependency>

        <!--    Spring Boot Undertow    -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
            <version>${spring-boot.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--    Log4j    -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <!--    Commons Lang    -->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>

        <!--    Apache Http Client    -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>

        <!--    Apache Http Client Core    -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>${httpcore.version}</version>
        </dependency>

        <!--    Apache Http Async Client    -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpasyncclient</artifactId>
            <version>${httpasyncclient.version}</version>
        </dependency>

        <!--    Apache Http Client NIO    -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore-nio</artifactId>
            <version>${httpcore-nio.version}</version>
        </dependency>

        <!--    Apollo    -->
        <dependency>
            <groupId>com.ctrip.framework.apollo</groupId>
            <artifactId>apollo-openapi</artifactId>
            <version>${apollo-openapi.version}</version>
            <scope>test</scope>
        </dependency>

        <!--    Curator    -->
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-recipes</artifactId>
            <version>${curator.version}</version>
            <scope>test</scope>
        </dependency>

        <!--    JUnit    -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!--    Mockito    -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <!--    System Rules    -->
        <dependency>
            <groupId>com.github.stefanbirkner</groupId>
            <artifactId>system-rules</artifactId>
            <version>${system-rules.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--     Spring Boot 依赖管理     -->
    <dependencyManagement>
        <dependencies>
            <!--      Spring Boot Starter Parent      -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

<!--            &lt;!&ndash;    Lombok    &ndash;&gt;-->
<!--            <dependency>-->
<!--                <groupId>org.projectlombok</groupId>-->
<!--                <artifactId>lombok</artifactId>-->
<!--                <optional>true</optional>-->
<!--            </dependency>-->
        </dependencies>
    </dependencyManagement>

    <!--    构建工具    -->
    <build>
        <!--    最终名称    -->
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <!--    编译插件    -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <compilerArgs>
                        <arg>-Xlint:deprecation</arg>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!--      打包插件      -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <mainClass>com.alibaba.csp.sentinel.dashboard.LersosaSentinelApplication</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--      检查代码格式      -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>

        <!--      资源过滤      -->
        <resources>
            <!--      过滤掉 webapp 目录下的静态资源      -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>

            <!--      过滤掉 node_modules 目录      -->
            <resource>
                <directory>src/main/webapp/</directory>
                <excludes>
                    <exclude>resources/node_modules/**</exclude>
                </excludes>
            </resource>
        </resources>

        <!--      插件管理      -->
        <pluginManagement>
            <plugins>
                <!--      Maven 资源过滤      -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <configuration>
                        <delimiters>
                            <delimiter>${resource.delimiter}</delimiter>
                        </delimiters>
                        <useDefaultDelimiters>false</useDefaultDelimiters>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
